        public async Task<ActionResult> ConsumeExternalAPI()
        {
            string url = "http://rest-service.guides.spring.io/greeting";
            java result = new java();
            using (HttpClient client = new HttpClient())
            {
                //client.BaseAddress = new Uri(url);
                //client.DefaultRequestHeaders.Accept.Clear();
                //client.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/json"));
                HttpResponseMessage response = await client.GetAsync(url);
                if (response.IsSuccessStatusCode)
                {
                    var data = await response.Content.ReadAsStringAsync();
                    JavaScriptSerializer serializer = new JavaScriptSerializer();
                    result = serializer.Deserialize<java>(Convert.ToString(data));
                }
            }
            return View(result);
        }

        public ActionResult ExportCitizen()
        {
            List<Citizen> citizens = new List<Citizen>();
            citizens = db.Citizens.ToList();

            CrystalDecisions.CrystalReports.Engine.ReportDocument rd = new ReportDocument();
            rd.Load(Path.Combine(Server.MapPath("~/CrystalReport"),"CrystalList.rpt"));

            rd.SetDataSource(citizens);
            Response.Buffer = false;
            Response.ClearContent();
            Response.ClearHeaders();

            Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
            stream.Seek(0, SeekOrigin.Begin);
            return File(stream, "application/pdf", "Citizenlist.pdf");
        }

    }